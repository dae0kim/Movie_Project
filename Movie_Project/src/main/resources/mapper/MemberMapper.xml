<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.myapp.movie.member.IMemberRepository">

	<resultMap id="memberMap" type="com.project.myapp.movie.member.MemberVO">
		<result property="memberId" column="MEMBER_ID" />
		<result property="email" column="EMAIL" />
		<result property="password" column="PASSWORD" />
		<result property="nickname" column="NICKNAME" />
		<result property="birthDate" column="BIRTH_DATE" />
		<result property="phoneNumber" column="PHONE_NUMBER" />
		<result property="gender" column="GENDER" />
		<result property="favoriteGenre1" column="FAVORITE_GENRE1" />
		<result property="favoriteGenre2" column="FAVORITE_GENRE2" />
		<result property="favoriteGenre3" column="FAVORITE_GENRE3" />
		<result property="memberType" column="MEMBER_TYPE" />
	</resultMap>
	
	<!-- 작성자 : 김대영 -->
	<select id="getMemberList" resultMap="memberMap">
		SELECT * FROM MEMBER
		ORDER BY member_id DESC
	</select>
	
	<!-- 작성자: 이기쁨 -->
	<!-- 로그인시 이메일, 비밀번호 확인 -->
	<select id="loginCheck" resultMap="memberMap">
		SELECT * FROM MEMBER WHERE email = #{email} AND password = #{password}
	</select>
	
	<!-- 작성자: 이기쁨 -->
	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="com.project.myapp.movie.member.MemberVO">
		INSERT INTO MEMBER
			(MEMBER_ID, EMAIL, PASSWORD, NICKNAME, BIRTH_DATE,
			PHONE_NUMBER, GENDER, FAVORITE_GENRE1, FAVORITE_GENRE2, FAVORITE_GENRE3)
		VALUES
			(member_seq.nextval, #{email}, #{password}, #{nickname}, #{birthDate},
			#{phoneNumber}, #{gender}, #{favoriteGenre1}, #{favoriteGenre2}, #{favoriteGenre3})	
	</insert>
	
	<!-- 작성자: 이기쁨 -->
	<!-- 회원가입시 휴대폰번호 중복 확인 -->
	<!-- 회원가입시 이메일 중복 확인 -->
	<!-- 회원가입시 닉네임 중복 확인 -->
	<select id="overlapChk" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM MEMBER
		<where>
			<if test="email != null">
				EMAIL = #{email}
			</if>
			<if test="nickname != null">
				AND NICKNAME = #{nickname}
			</if>
			<if test="phoneNumber != null">
				AND PHONE_NUMBER = #{phoneNumber}
			</if>		
		</where>
	</select>
	
	<!-- 작성자: 이기쁨 -->
	<!-- 이메일 찾기 -->
	<select id="emailSearch" parameterType="String" resultType="String">
		SELECT email FROM member WHERE PHONE_NUMBER=#{phoneNumber} AND BIRTH_DATE=#{birthDate}
	</select>
	
	<!-- 작성자: 이기쁨 -->
	<!-- 일치하는 회원 정보 가져오기(동적sql) -->
	<select id="getMemberInfo" resultMap="memberMap">
		SELECT * FROM MEMBER 
		<where>
			<if test="email != null">
				EMAIL = #{email}
			</if>
			<if test="password != null">
				AND PASSWORD = #{password}
			</if>
			<if test="birthDate != null">
				AND BIRTH_DATE = #{birthDate}
			</if>
			<if test="phoneNumber != null">
				AND PHONE_NUMBER = #{phoneNumber}
			</if>
		</where>
	</select>

	<!-- 작성자: 이기쁨 -->
	<!-- 1. 비밀번호 변경 -->
	<!-- 2. 회원정보 수정 -->
	<update id="updateMember" parameterType="com.project.myapp.movie.member.MemberVO">
		UPDATE MEMBER
		<set>
			<if test="password != null">PASSWORD = #{password},</if>
			<if test="phoneNumber != null">PHONE_NUMBER = #{phoneNumber}</if>
		</set>
		WHERE EMAIL=#{email}
	</update>
	
	<!-- 멤버 삭제 -->
	<!-- 작성자: 이기쁨 -->
	<delete id="deleteMember" parameterType="String">
		DELETE FROM MEMBER WHERE MEMBER_ID = #{memberId}	
	</delete>

</mapper>